name: pdftrick-native windows
on: [push]

env:
  RELEASE_VERSION: "NO->"

jobs:
  test-windows:
    runs-on: windows-latest
    if: github.ref == 'refs/heads/develop'
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Mysys2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >-
            pkg-config
            make
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-check
      - run: echo "Os -> ${{ runner.os }}, branch -> ${{ github.ref }}, repository -> ${{ github.repository }}."
      - name: Test
        run: make test
      - name: Release
        run: make release

  test-mac:
    needs: create-release
    runs-on: macos-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup dev tools
        run: brew install check
      - name: Test
        run: make test
      - name: Release
        run: make release
      - name: Upload darwin artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/release/pdftrick-native_1.0.3.jnilib
          asset_name: pdftrick-native_1.0.3.jnilib
          asset_content_type: application/octet-stream
      - run: echo "the version is $RELEASE_VERSION"

  create-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: "Set version"
        id: version
        run: echo "::set-output name=CURRENT_VERSION::$(make version)"
      - name: Create Release
        uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ steps.version.outputs.CURRENT_VERSION }}
        with:
          release_name: ${{ steps.version.outputs.CURRENT_VERSION }}
          tag_name: ${{ steps.version.outputs.CURRENT_VERSION }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      version: ${{ steps.version.outputs.CURRENT_VERSION }}

  #     deploy-windows:
  #   runs-on: windows-latest
  #   if: github.ref == 'refs/heads/master'
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Set up Mysys2
  #       uses: msys2/setup-msys2@v2
  #       with:
  #         update: true
  #         msystem: MINGW64
  #         install: >-
  #           pkg-config
  #           make
  #           mingw-w64-x86_64-gcc
  #           mingw-w64-x86_64-check
  #     - run: echo "Os -> ${{ runner.os }}, branch -> ${{ github.ref }}, repository -> ${{ github.repository }}."
  #     - name: Release
  #       run: make release

  # deploy-mac:
  #   runs-on: macos-latest
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Setup dev tools
  #       run: brew install check
  #     - run: echo "Os -> ${{ runner.os }}, branch -> ${{ github.ref }}, repository -> ${{ github.repository }}."
  #     - name: Release
  #       run: make release
